function	script	GetScrollChoices	{
	.@scrollTier = getarg(0);
	.@scrollsuffix$ = "_SC";
	setarray .@firstTierSkills$[0],
		"AC_CHARGEARROW",
		"AC_DOUBLE",
		"AC_SHOWER",
		"AL_ANGELUS",
		"AL_BLESSING",
		"AL_CRUCIS",
		"AL_CURE",
		"AL_DECAGI",
		"AL_HEAL",
		"AL_HOLYLIGHT",
		"AL_INCAGI",
		"AL_PNEUMA",
		"AL_RUWACH",
		"MC_LOUD",
		"MC_MAMMONITE",
		"MG_COLDBOLT",
		"MG_FIREBALL",
		"MG_FIREBOLT",
		"MG_FIREWALL",
		"MG_FROSTDIVER",
		"MG_LIGHTNINGBOLT",
		"MG_NAPALMBEAT",
		"MG_SAFETYWALL",
		"MG_SIGHT",
		"MG_SOULSTRIKE",
		"MG_STONECURSE",
		"MG_THUNDERSTORM",
		"SM_AUTOBERSERK",
		"SM_BASH",
		"SM_ENDURE",
		"SM_MAGNUM",
		"SM_PROVOKE",
		"TF_BACKSLIDING",
		"TF_DETOXIFY",
		"TF_DOUBLE",
		"TF_HIDING",
		"TF_POISON",
		"TF_SPRINKLESAND",
		"TF_STEAL",
		"TF_THROWSTONE",
		"ITM_TOMAHAWK";

	setarray .@secondTierSkills$[0],
		"AM_ACIDTERROR",
		"AM_BERSERKPITCHER",
		"AM_CANNIBALIZE",
		"AM_DEMONSTRATION",
		"AM_SPHEREMINE",
		"AS_ENCHANTPOISON",
		"AS_GRIMTOOTH",
		"AS_POISONREACT",
		"AS_SONICBLOW",
		"AS_SPLASHER",
		"AS_VENOMDUST",
		"AS_VENOMKNIFE",
		"BA_APPLEIDUN",
		"BA_ASSASSINCROSS",
		"BA_DISSONANCE",
		"BA_FROSTJOKE",
		"BA_MUSICALSTRIKE",
		"BA_PANGVOICE",
		"BA_WHISTLE",
		"BD_ENCORE",
		"BD_ETERNALCHAOS",
		"BD_INTOABYSS",
		"BD_LULLABY",
		"BD_RINGNIBELUNGEN",
		"BS_ADRENALINE",
		"BS_HAMMERFALL",
		"BS_MAXIMIZE",
		"BS_OVERTHRUST",
		"BS_REPAIRWEAPON",
		"BS_SKINTEMPER",
		"BS_WEAPONPERFECT",
		"CR_AUTOGUARD",
		"CR_DEFENDER",
		"CR_GRANDCROSS",
		"CR_HOLYCROSS",
		"CR_PROVIDENCE",
		"CR_REFLECTSHIELD",
		"CR_SHIELDBOOMERANG",
		"CR_SHIELDCHARGE",
		"CR_SHRINK",
		"CR_SPEARQUICKEN",
		"DC_DONTFORGETME",
		"DC_FORTUNEKISS",
		"DC_HUMMING",
		"DC_SCREAM",
		"DC_SERVICEFORYOU",
		"DC_THROWARROW",
		"DC_UGLYDANCE",
		"DC_WINKCHARM",
		"HT_ANKLESNARE",
		"HT_BLASTMINE",
		"HT_BLITZBEAT",
		"HT_CLAYMORETRAP",
		"HT_DETECTING",
		"HT_FALCON",
		"HT_FLASHER",
		"HT_FREEZINGTRAP",
		"HT_LANDMINE",
		"HT_PHANTASMIC",
		"HT_POWER",
		"HT_REMOVETRAP",
		"HT_SANDMAN",
		"HT_SHOCKWAVE",
		"HT_SKIDTRAP",
		"HT_SPRINGTRAP",
		"KN_AUTOCOUNTER",
		"KN_BOWLINGBASH",
		"KN_BRANDISHSPEAR",
		"KN_CHARGEATK",
		"KN_ONEHAND",
		"KN_PIERCE",
		"KN_SPEARBOOMERANG",
		"KN_SPEARSTAB",
		"KN_TWOHANDQUICKEN",
		"MO_ABSORBSPIRITS",
		"MO_BALKYOUNG",
		"MO_BLADESTOP",
		"MO_CALLSPIRITS",
		"MO_CHAINCOMBO",
		"MO_COMBOFINISH",
		"MO_EXPLOSIONSPIRITS",
		"MO_EXTREMITYFIST",
		"MO_FINGEROFFENSIVE",
		"MO_INVESTIGATE",
		"MO_KITRANSLATION",
		"MO_STEELBODY",
		"MO_TRIPLEATTACK",
		"PR_ASPERSIO",
		"PR_BENEDICTIO",
		"PR_GLORIA",
		"PR_IMPOSITIO",
		"PR_LEXAETERNA",
		"PR_LEXDIVINA",
		"PR_MAGNIFICAT",
		"PR_MAGNUS",
		"PR_SANCTUARY",
		"PR_SLOWPOISON",
		"PR_STRECOVERY",
		"PR_SUFFRAGIUM",
		"PR_TURNUNDEAD",
		"RG_BACKSTAP",
		"RG_CLOSECONFINE",
		"RG_RAID",
		"RG_STRIPARMOR",
		"RG_STRIPHELM",
		"RG_STRIPSHIELD",
		"RG_STRIPWEAPON",
		"SA_AUTOSPELL",
		"SA_CASTCANCEL",
		"SA_DELUGE",
		"SA_DISPELL",
		"SA_FLAMELAUNCHER",
		"SA_FREECAST",
		"SA_FROSTWEAPON",
		"SA_LANDPROTECTOR",
		"SA_LIGHTNINGLOADER",
		"SA_MAGICROD",
		"SA_SEISMICWEAPON",
		"SA_SPELLBREAKER",
		"SA_VIOLENTGALE",
		"SA_VOLCANO",
		"WZ_EARTHSPIKE",
		"WZ_FIREPILLAR",
		"WZ_FROSTNOVA",
		"WZ_HEAVENDRIVE",
		"WZ_ICEWALL",
		"WZ_JUPITEL",
		"WZ_METEOR",
		"WZ_QUAGMIRE",
		"WZ_SIGHTBLASTER",
		"WZ_SIGHTRASHER",
		"WZ_STORMGUST",
		"WZ_VERMILION",
		"WZ_WATERBALL";

	setarray .@thirdTierskills$[0],
		"ASC_BREAKER",
		"ASC_METEORASSAULT",
		"CG_ARROWVULCAN",
		"CG_MARIONETTE",
		"CG_TAROTCARD",
		"CH_CHAINCRUSH",
		"CH_PALMSTRIKE",
		"CH_TIGERFIST",
		"CR_ACIDDEMONSTRATION",
		"HP_BASILICA",
		"HP_MANARECHARGE",
		"HW_GANBANTEIN",
		"HW_GRAVITATION",
		"HW_MAGICCRASHER",
		"HW_NAPALMVULCAN",
		"HW_SOULDRAIN",
		"LK_AURABLADE",
		"LK_BERSERK",
		"LK_CONCENTRATION",
		"LK_HEADCRUSH",
		"LK_JOINTBEAT",
		"LK_PARRYING",
		"LK_SPIRALPIERCE",
		"PA_PRESSURE",
		"PA_SACRIFICE",
		"PA_SHIELDCHAIN",
		"PF_DOUBLECASTING",
		"PF_FOGWALL",
		"PF_HPCONVERSION",
		"PF_MEMORIZE",
		"PF_MINDBREAKER",
		"PF_SOULBURN",
		"PF_SOULCHANGE",
		"PF_SPIDERWEB",
		"SN_FALCONASSAULT",
		"SN_SHARPSHOOTING",
		"SN_WINDWALK",
		"ST_FULLSTRIP",
		"ST_REJECTSWORD",
		"WS_MELTDOWN",
		"WS_OVERTHRUSTMAX";

	switch (.@scrollTier) {
		case 1:
			.@numberOfOptions = 3;
			copyarray .@workingArray$[0],.@firstTierSkills$[0],getarraysize(.@firstTierSkills$);
			for (.@i = 0; .@i < .@numberOfOptions; .@i++) {
				.@arrayLength = getarraysize(.@workingArray$);
				.@option = rand(.@arrayLength);
				setarray scrollChoicesTier1$[.@i],getitemname(.@workingArray$[.@option]+"_SC"); // get a scroll name
				deletearray .@workingArray$[.@option],1;
			}
			break;
		case 2:
			.@numberOfOptions = 3;
			copyarray .@workingArray$[0],.@secondTierSkills$[0],getarraysize(.@secondTierSkills$);
			for (.@i = 0; .@i < .@numberOfOptions; .@i++) {
				.@arrayLength = getarraysize(.@workingArray$);
				.@option = rand(.@arrayLength);
				setarray scrollChoicesTier2$[.@i],getitemname(.@workingArray$[.@option]+"_SC"); // get a scroll name
				deletearray .@workingArray$[.@option],1;
			}
			break;
		case 3:
			.@numberOfOptions = 2;
			copyarray .@workingArray$[0],.@thirdTierSkills$[0],getarraysize(.@thirdTierSkills$);
			for (.@i = 0; .@i < .@numberOfOptions; .@i++) {
				.@arrayLength = getarraysize(.@workingArray$);
				.@option = rand(.@arrayLength);
				setarray scrollChoicesTier3$[.@i],getitemname(.@workingArray$[.@option]+"_SC"); // get a scroll name
				deletearray .@workingArray$[.@option],1;
			}
			break;
		default:
			debugmes "Something bad happened when getting skill scroll choices.";
			break;
	}
	return;
}

function	script	ClearSkillScrollChoices	{
	.@boxTier = getarg(0);
	switch (.@boxTier) {
		case 1:
			deletearray scrollChoicesTier1$[0],getarraysize(scrollChoicesTier1$);
			break;
		case 2:
			deletearray scrollChoicesTier2$[0],getarraysize(scrollChoicesTier2$);
			break;
		case 3:
			deletearray scrollChoicesTier3$[0],getarraysize(scrollChoicesTier3$);
		default:
			debugmes "Dunno what skill choice array you want me to clear.";
			break;
	}
	return;
}

function	script	SkillScrollBoxTier1	{
	.@skillScrollBoxTier = 1;
	.@skillScrollBoxItemId = 600001;

	if (getarraysize(scrollChoicesTier1$) == 0) {
		GetScrollChoices(.@skillScrollBoxTier);
	}

	switch(prompt(scrollChoicesTier1$[0],scrollChoicesTier1$[1],scrollChoicesTier1$[2])) {
		case 1: 
			getitem scrollChoicesTier1$[0],1;
			delitem .@skillScrollBoxItemId,1;
			ClearSkillScrollChoices(.@skillScrollBoxTier);
			end;
		case 2:
			getitem scrollChoicesTier1$[1],1;
			delitem .@skillScrollBoxItemId,1;
			ClearSkillScrollChoices(.@skillScrollBoxTier);
			end;
		case 3:
			getitem scrollChoicesTier1$[2],1;
			delitem .@skillScrollBoxItemId,1;
			ClearSkillScrollChoices(.@skillScrollBoxTier);
			end;
		case 255:
			dispbottom "Scroll not used, choices maintained.";
			end;
	}
}

function	script	SkillScrollBoxTier2	{
	.@skillScrollBoxTier = 2;
	.@skillScrollBoxItemId = 600002;

	if (getarraysize(scrollChoicesTier2$) == 0) {
		GetScrollChoices(.@skillScrollBoxTier);
	}

	switch(prompt(scrollChoicesTier2$[0],scrollChoicesTier2$[1],scrollChoicesTier2$[2])) {
		case 1: 
			getitem scrollChoicesTier2$[0],1;
			delitem .@skillScrollBoxItemId,1;
			ClearSkillScrollChoices(.@skillScrollBoxTier);
			end;
		case 2:
			getitem scrollChoicesTier1$[1],1;
			delitem .@skillScrollBoxItemId,1;
			ClearSkillScrollChoices(.@skillScrollBoxTier);
			end;
		case 3:
			getitem scrollChoicesTier1$[2],1;
			delitem .@skillScrollBoxItemId,1;
			ClearSkillScrollChoices(.@skillScrollBoxTier);
			end;
		case 255:
			dispbottom "Scroll not used, choices maintained.";
			end;
	}
}

function	script	SkillScrollBoxTier3	{
	.@skillScrollBoxTier = 3;
	.@skillScrollBoxItemId = 600003;

	if (getarraysize(scrollChoicesTier3$) == 0) {
		GetScrollChoices(.@skillScrollBoxTier);
	}

	switch(prompt(scrollChoicesTier3$[0],scrollChoicesTier3$[1])) {
		case 1: 
			getitem scrollChoicesTier3$[0],1;
			delitem .@skillScrollBoxItemId,1;
			ClearSkillScrollChoices(.@skillScrollBoxTier);
			end;
		case 2:
			getitem scrollChoicesTier3$[1],1;
			delitem .@skillScrollBoxItemId,1;
			ClearSkillScrollChoices(.@skillScrollBoxTier);
			end;
		case 3:
			getitem scrollChoicesTier3$[2],1;
			delitem .@skillScrollBoxItemId,1;
			ClearSkillScrollChoices(.@skillScrollBoxTier);
			end;
		case 255:
			dispbottom "Scroll not used, choices maintained.";
			end;
	}
}