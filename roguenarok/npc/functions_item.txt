function	script	ClothArmorMastery	{
	.@maxHpBonus = 80;
	.@maxSpBonus = 100;
	.@spRecovBonus = 20;
	.@castSpdBonus = 15;

	switch (Class) {
		case Job_Mage:
		case Job_Acolyte:
			bonus bMaxHP,.@maxHpBonus;
			bonus bMaxSP,.@maxSpBonus;
			bonus bSPrecovRate,.@spRecovBonus;
			bonus bCastrate,-.@castSpdBonus;
			break;
		default:
			return;
	}
}

function	script	LightArmorMastery	{
	.@maxHpBonus = 100;

	switch (Class) {
		case Job_Thief:
		case Job_Archer:
			bonus bMaxHP,.@maxHpBonus;
			break;
		default:
			return;
	}
}

function	script	HeavyArmorMastery	{
	.@maxHpBonus = 120;
	.@hpRecovBonus = 20;
	.@bonusDef = 15;

	switch (Class) {
		case Job_Swordman:
		case Job_Merchant:
			bonus bMaxHP,.@maxHpBonus;
			bonus bHPrecovRate,.@hpRecovBonus;
			bonus bDef,.@bonusDef;
			break;
		case Job_Knight:
		case Job_Crusader:
		case Job_Blacksmith:
		case Job_Alchemist:
			bonus bMaxHP,.@maxHpBonus * 2;
			bonus bHPrecovRate,.@hpRecovBonus * 2;
			bonus bDef,.@bonusDef * 2;
			break;
		default: 
			return;
	}
}

function	script	AddNamedSkill	{
	.@skillname$ = getarg(0);
	.@lv = getskilllv(.@skillname$);
	.@itemname$ = getarg(0) + "_SC";

	if (.@lv > 0) {
		dispbottom "You already know " + .@skillname$ + ".";
		return;
	}

	if (SkillPoint >= 1) {
        skill .@skillname$,1,SKILL_PERM_GRANT;
        SkillPoint -= 1;
		delitem .@itemname$,1;
		return;
      } else { 
        dispbottom "You require more skill points.";
		return;
      }
}

function	script	RemoveNamedSkill	{
	.@skillname$ = getarg(0);
	.@lv = getskilllv(.@skillname$);
	.@itemname$ = getarg(0) + "_REM";

	if (.@lv < 1) {
		dispbottom "You don't have any points in " + .@skillname$;
		return;
	}

	resetnamedskill(.@skillname$);
	delitem .@itemname$,1;
	dispbottom "Reset " + .@skillname$ + ", refunding " + .@lv + " skill point(s).";
	return;
}

function	script	SecondJobSelect	{
	
	.@arg1$ = jobname(getarg(0));
	.@arg2$ = jobname(getarg(1));
	//parse gender for Bard/Dancer
	if(getarg(1) == Job_Bard && Sex == SEX_FEMALE) {
			.@arg2$ = jobname(Job_Dancer);
	}
	switch(select(.@arg1$,.@arg2$)) {
		case 1: 
			SecondJobChange(getarg(0));
			delitem jobname(BaseClass)+"_CHANGER",1;
			end;
		case 2: 
			SecondJobChange(getarg(1));
			delitem jobname(BaseClass)+"_CHANGER",1;
			end;
	}
	end;
}